{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"edg",
				"edgeWeights"
			],
			[
				"G",
				"GRIDONMAP"
			],
			[
				"lis",
				"listOfNodes"
			],
			[
				"ndw",
				"ndw"
			],
			[
				"np",
				"np"
			],
			[
				"di",
				"different_words"
			],
			[
				"ND",
				"NDW2"
			],
			[
				"fo",
				"Folk"
			],
			[
				"We",
				"WEIGHTED"
			],
			[
				"choice",
				"choice"
			],
			[
				"ed",
				"edges"
			],
			[
				"BINS",
				"BINS"
			],
			[
				"del",
				"deltaH"
			],
			[
				"list",
				"listOfValues"
			],
			[
				"li",
				"listOfPositions"
			],
			[
				"item",
				"itemgetter"
			],
			[
				"le",
				"length"
			],
			[
				"file",
				"files"
			],
			[
				"He",
				"HEIGHT"
			],
			[
				"x",
				"xrange"
			],
			[
				"lo",
				"listOfNodes"
			],
			[
				"e",
				"edge"
			],
			[
				"for",
				"for	For Loop"
			],
			[
				"node",
				"nodes"
			],
			[
				"s",
				"self"
			],
			[
				"no",
				"nodes"
			],
			[
				"map",
				"mapInfo"
			],
			[
				"lin",
				"listOfNodes"
			],
			[
				"get",
				"getallHeights"
			],
			[
				"len",
				"linesdict"
			],
			[
				"ps",
				"positionFromIndex"
			],
			[
				"pos",
				"position"
			],
			[
				"the",
				"theFile"
			],
			[
				"po",
				"position"
			],
			[
				"listOf",
				"listOfPos"
			],
			[
				"lit",
				"listOfNodes"
			],
			[
				"T",
				"totalNum"
			],
			[
				"l",
				"listOfNodes"
			],
			[
				"c",
				"coarsnes"
			],
			[
				"BARA",
				"BARABASI_M"
			],
			[
				"a",
				"add_node"
			]
		]
	},
	"buffers":
	[
		{
			"file": "gridItalia.py",
			"settings":
			{
				"buffer_size": 7023,
				"line_ending": "Unix",
				"name": "#Grid for italy"
			}
		},
		{
			"file": "objectDump.py",
			"settings":
			{
				"buffer_size": 1076,
				"line_ending": "Unix",
				"name": "import cPickle as pk"
			}
		},
		{
			"file": "NG.py",
			"settings":
			{
				"buffer_size": 352,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Agent.py",
			"settings":
			{
				"buffer_size": 6776,
				"line_ending": "Unix"
			}
		},
		{
			"file": "analisys.py",
			"settings":
			{
				"buffer_size": 1668,
				"line_ending": "Unix"
			}
		},
		{
			"file": "weightchoice.py",
			"settings":
			{
				"buffer_size": 694,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#def \nimport matplotlib.pyplot as plt\n\nDEBUG = 0\n\ndef Play(f, T=1000000, name=\"game.dat\"):\n    # folk f, play rounds T\n    time=[]\n    different_words=[]\n    for i in range(T):\n        [speaker, hearer] = f.Select()\n        if(hearer==None):\n            print \"Che rumore fa un albero che cade in una foresta disabitata?\"\n            time.append(i+1)\n            different_words.append(different_words[-1])\n            continue\n        #if (speaker.ndw==1 and i>f.N): \n        #    break\n        if(speaker==None):\n            print \"che rumore fa il battito di una mano sola?\"\n            time.append(i+1)\n            if speaker.ndw:\n                different_words.append(speaker.ndw)\n            else:\n                different_words.append(different_words[-1])\n            continue\n        #if (speaker.ndw==1 and i>f.N): \n        #    break\n        \n        if DEBUG: \n            print \"speaker:\",\n            str(speaker.dict),\n            \" hearer:\",\n            str(hearer.dict)\n            \n        if(len(speaker.dict) == 1 and speaker.dict == hearer.dict): \n            # trivial case\n            #print \"%d %d\" %(i, speaker.ndw)\n            time.append(i+1)\n            different_words.append(different_words[-1])\n            continue\n        \n        #print speaker.id, hearer.id\n        if not speaker.dict: #if empty\n            w = speaker.NewWord()\n            speaker.AddWord(w)\n            w = speaker.ChooseWord()\n        if w in hearer.dict: # success\n            if DEBUG: \n                print \"w:\",str(w),\"success\"\n            speaker.EraseDict()\n            hearer.EraseDict()\n            speaker.AddWord(w)\n            hearer.AddWord(w)\n        else:\n            if DEBUG: \n                print \"w:\",str(w), \"failure\"\n            hearer.AddWord(w)\n        #print \"%d %d\" %(i+1, speaker.ndw)\n        #if (speaker.ndw==1 and i>f.N):\n        #    break\n        time.append(i+1)\n        different_words.append(speaker.ndw)\n    print len(different_words)\n    fig=plt.figure()\n    ax1=plt.subplot2grid((1,1),(0,0))\n    plt.scatter(time, different_words, label='NDW')\n    plt.xlabel('Time Step')\n    plt.ylabel('Number of Different Words')\n    plt.title('Number of Different Words in Time')\n    ax1.grid(True)\n    plt.show()\n    target = open(name, \"w\")\n    for x in range(len(time)):\n        target.write(str(time[x])+\"\\t\"+str(different_words[x])+\"\\n\")\n\n        \n",
			"file": "Game.py",
			"file_size": 2371,
			"file_write_time": 131183276308878370,
			"settings":
			{
				"buffer_size": 2386,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 98.0,
		"last_filter": "instal",
		"selected_items":
		[
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"mater",
				"Material Theme: Activate theme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"enco",
				"HTML: Encode Special Characters"
			],
			[
				"conve",
				"Convert Case: Lower Case"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/donrog/tesiLaurea"
	],
	"file_history":
	[
		"/home/donrog/Agent.py",
		"/home/donrog/tesiLaurea/DEM.jpgw",
		"/home/donrog/tesiLaurea/Game.py",
		"/home/donrog/basemap.py",
		"/home/donrog/tesiLaurea/weightchoice.py",
		"/home/donrog/tesiLaurea/randomWightChoice.py",
		"/home/donrog/tesiLaurea/Agent",
		"/home/donrog/tesiLaurea/outpud.dat",
		"/home/donrog/tesiLaurea/Agent2.py",
		"/home/donrog/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/donrog/tesiLaurea/README.md",
		"/home/donrog/tesiLaurea/result.dat",
		"/home/donrog/tesiLaurea/result",
		"/home/donrog/tesiLaurea/Agent.py",
		"/home/donrog/tesiLaurea/NG.py",
		"/home/donrog/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/donrog/python_work/networkx_tutorial.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Wid",
			"as",
			"map",
			"int(",
			"int",
			"75"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"float",
			"DELTAS"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "gridItalia.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7023,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"auto_name": "#Grid for italy",
							"color_scheme": "Packages/User/Color Highlighter/themes/Solarized (Dark).tmTheme",
							"rulers":
							[
								78
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "objectDump.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1076,
						"regions":
						{
						},
						"selection":
						[
							[
								257,
								257
							]
						],
						"settings":
						{
							"auto_name": "import cPickle as pk",
							"color_scheme": "Packages/Material Theme/schemes/Material-Theme-Lighter.tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "NG.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 352,
						"regions":
						{
						},
						"selection":
						[
							[
								288,
								288
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Solarized (Dark).tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Agent.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6776,
						"regions":
						{
						},
						"selection":
						[
							[
								389,
								389
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Lighter.tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 912.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "analisys.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1668,
						"regions":
						{
						},
						"selection":
						[
							[
								1668,
								1668
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Lighter.tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "weightchoice.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 694,
						"regions":
						{
						},
						"selection":
						[
							[
								180,
								180
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Lighter.tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Game.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2386,
						"regions":
						{
						},
						"selection":
						[
							[
								1390,
								1390
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Material-Theme-Lighter.tmTheme",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 399.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 118.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "TesiMagistrale.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"re",
				"tesiLaurea/README.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
